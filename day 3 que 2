https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/submissions/


class Solution {
public:
  vector<int> searchRange(vector<int>& arr, int target) {
  int n1 = arr.size();
  int s1 = 0;
  int e1 = n1-1;
  int mid1 = (s1+e1)/2;

  //BEST Practice
  //int mid = s +(e-s)/2;
  
  int ans1 = -1;

  while(s1<=e1) {
    if(arr[mid1]==target) {
      //ans store
      ans1 = mid1;
      //left me jao
      e1 = mid1-1;
    }
    else if(target > arr[mid1]) {
      //right me jao
      s1 = mid1+1;
    }
    else if(target < arr[mid1]) {
      //left me jao
      e1 = mid1-1;
    }
    //galti yaha krte h hmesha
    mid1 = (s1+e1)/2;
  }
  
  int s = 0;
  int e = n1-1;
  int mid = s +(e-s)/2;
  int ans = -1;

  while(s<=e) 
  {
    if(arr[mid]==target) {
    //ans store
      ans = mid;
    //right me jao
      s = mid+1;
    }
    else if(target > arr[mid]) {
      //right me jao
      s = mid+1;
    }
    else if(target < arr[mid]) {
      //left me jao
      e = mid-1;
    }
    //galti yaha krte h hmesha
    mid = (s+e)/2;
  }



  return{ans1,ans};

    }
};
